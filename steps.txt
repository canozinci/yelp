**npm init –y

**Server/index.js

                import express from 'express';
                import path from "path";

                import webpack from 'webpack';
                import webpackMiddleware from 'webpack-dev-middleware';
                import webpackHotMiddleware from 'webpack-hot-middleware';

                import webpackConfig from '../webpack.config.dev.js';

                let app = express();

                const compiler = webpack(webpackConfig);

                app.use(webpackMiddleware(compiler, {
                  hot: true,
                  publicPath: webpackConfig.output.publicPath,
                  noInfo: true
                } ));
                app.use(webpackHotMiddleware(compiler));

                app.get('/*', (req,res) => {
                  res.sendFile(path.join(__dirname, './index.html'));
                });

                app.listen(3000, () => console.log('Running on localhost 3000'));

**npm install --save-dev babel-cli express babel-preset-es2015 nodemon webpack webpack-dev-middleware babel-loader babel-preset-react react-hot-loader webpack-hot-middleware

** package.json’da script ekle
	"start": "nodemon --watch server --exec babel-node -- server/index.js",

**.babelrc
	{ "presets": ["es2015","react"] }

** webpack.config.dev.js
                import path from 'path';
                import webpack from 'webpack'

                export default {
                  devtools: 'eval-source-map',
                  entry: [
                    'webpack-hot-middleware/client?reload=true',
                    path.join(__dirname, '/client/index.js')
                  ],
                  output: {
                    path: '/',
                    publicPath: '/'
                  },
                  plugins: [
                    new webpack.NoErrorsPlugin(),
                    new webpack.optimize.OccurenceOrderPlugin(),
                    new webpack.HotModuleReplacementPlugin()
                  ],
                  module:{
                    loaders: [
                      {
                         test: /\.js$/,
                         include:path.join(__dirname, '/client'),
                         loaders: ['react-hot-loader/webpack', 'babel']
                      }
                    ]
                  },
                  resolve:{
                    extensions: ['','.js']
                  }
                }

** server/index.html
              <!DOCTYPE html>
              <html>
              <head>
                <meta charset="UTF-8"/>
                <title>TITLE</title>
                <meta content ="width=device-width, initial-scale=1" name="viewport"/>
              </head>
              <body>
                <div id="app"></div>
                <script src="bundle.js"></script>
              </body>
              </html>

** .gitignore
  .DS_STORE
  node_modules

** git add --A
   git commit -m "message"
  git push origin master

** npm install --save react react-dom

** client/index.js
            import React from 'react';
            import {render} from 'react-dom';
            import App from './components/App';

            render (<App /> , document.getElementById('app'));

** client/components/App.js
            import React from 'react';

            class App extends React.Component {
              render() {
                return (
                  <h1> Hello World </h1>
                );
              }
            }

            export default App;
